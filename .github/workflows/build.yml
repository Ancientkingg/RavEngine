name: CI
on: push

jobs:
  build-linux-clang:
    name: Linux x64-clang Compile Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install cmake clang ninja-build libgl1-mesa-dev libwayland-dev libxkbcommon-dev libasound2-dev libegl-dev -y --no-install-recommends
      - name: Configure
        run: mkdir -p build && cd build; cmake -G "Ninja" .. 
      - name: Build
        run: cd build; cmake --build . --config Release --target RavEngine

  build-linux-gcc:
    name: Linux x64-gcc Compile Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install cmake g++ ninja-build libgl1-mesa-dev libwayland-dev libxkbcommon-dev libasound2-dev libegl-dev -y --no-install-recommends
      - name: Configure
        run: mkdir -p build && cd build; cmake -G "Ninja" ..
      - name: Build
        run: cd build; cmake --build . --config Release --target RavEngine
      
  build-emscripten:
    if: ${{ false }}  # disable for now, since emscripten is not possible without WebGPU
    name: Emscripten-Linux Compile Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install cmake clang python3 libgl1-mesa-dev libwayland-dev libxkbcommon-dev libegl-dev -y --no-install-recommends
      - name: Setup Emscripten
        run: git clone https://github.com/emscripten-core/emsdk.git --depth=1 && cd emsdk && ./emsdk install latest && ./emsdk activate latest && source ./emsdk_env.sh
      - name: Configure
        run: mkdir -p build && cd build; cmake -DCMAKE_TOOLCHAIN_FILE=../emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake .. 
      - name: Build
        run: cd build; cmake --build . --config Release --target RavEngine --parallel

  build-mac:
    name: macOS Compile Check
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Configure
        run: mkdir -p build && cd build; cmake -G "Xcode" ..
      - name: Build
        run: cd build; cmake --build . --config Release --target RavEngine
 
  build-ios:
    name: iOS Compile Check
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Configure
        run: mkdir -p build && cd build; cmake -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=../deps/ios/ios.toolchain.cmake -DPLATFORM=OS64COMBINED -DENABLE_ARC=OFF -DDEPLOYMENT_TARGET=14.0 .. 
      - name: Build
        run: cd build; cmake --build . --config Release --target RavEngine
        
  build-tvos:
    name: tvOS Compile Check
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Configure
        run: mkdir -p build && cd build; cmake -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=../deps/ios/ios.toolchain.cmake -DPLATFORM=TVOSCOMBINED -DENABLE_ARC=OFF -DDEPLOYMENT_TARGET=14.0 ..
      - name: Build
        run: cd build; cmake --build . --config Release --target RavEngine
                
  build-windows:
    name: Windows Compile Check
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Configure
        run: mkdir build && cd build; cmake -Wno-dev -DRAVENGINE_BUILD_TESTS=ON .. ; cmake ..
      - name: Build
        run: cd build; cmake --build . --config release --target RavEngine

  build-UWP:
    name: UWP Compile Check
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Configure
        run: mkdir build && cd build; cmake -G "Visual Studio 16 2019" -Ax64 -DCMAKE_SYSTEM_NAME=WindowsStore -DCMAKE_SYSTEM_VERSION="10.0" .. ; cmake .. ; 
      - name: Build
        run: cd build; cmake --build . --config release --target RavEngine
        
  test-linux:
    name: Linux Unit Tests (g++)
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install cmake g++ ninja-build libgl1-mesa-dev -y --no-install-recommends 
      - name: Build and Test
        run: cd test && ./test-linux.sh

  test-mac:
    name: macOS Unit Tests
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build and Test
        run: cd test && ./test-mac.sh
        
  test-windows:
    name: Windows Unit Tests
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build and Test
        run: cd test && .\test-win.bat
